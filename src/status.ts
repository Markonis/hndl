import { HttpStatus } from "./types";

export abstract class HttpStatusCode {
    public static CONTINUE: HttpStatus = { code: 100, phrase: "Continue" };
    public static SWITCHING_PROTOCOLS: HttpStatus = { code: 101, phrase: "Switching Protocols" };
    public static PROCESSING: HttpStatus = { code: 102, phrase: "Processin" };
    public static OK: HttpStatus = { code: 200, phrase: "OK" };
    public static CREATED: HttpStatus = { code: 201, phrase: "Created" };
    public static ACCEPTED: HttpStatus = { code: 202, phrase: "Accepted" };
    public static NON_AUTHORITATIVE_INFORMATION: HttpStatus = { code: 203, phrase: "Non Authoritative Information" };
    public static NO_CONTENT: HttpStatus = { code: 204, phrase: "No Content" };
    public static RESET_CONTENT: HttpStatus = { code: 205, phrase: "Reset Content" };
    public static PARTIAL_CONTENT: HttpStatus = { code: 206, phrase: "Partial Content" };
    public static MULTI_STATUS: HttpStatus = { code: 207, phrase: "Multi-Status" };
    public static MULTIPLE_CHOICES: HttpStatus = { code: 300, phrase: "Multiple Choices" };
    public static MOVED_PERMANENTLY: HttpStatus = { code: 301, phrase: "Moved Permanently" };
    public static MOVED_TEMPORARILY: HttpStatus = { code: 302, phrase: "Moved Temporarily" };
    public static SEE_OTHER: HttpStatus = { code: 303, phrase: "See Other" };
    public static NOT_MODIFIED: HttpStatus = { code: 304, phrase: "Not Modified" };
    public static USE_PROXY: HttpStatus = { code: 305, phrase: "Use Proxy" };
    public static TEMPORARY_REDIRECT: HttpStatus = { code: 307, phrase: "Temporary Redirect" };
    public static PERMANENT_REDIRECT: HttpStatus = { code: 308, phrase: "Permanent Redirect" };
    public static BAD_REQUEST: HttpStatus = { code: 400, phrase: "Bad Request" };
    public static UNAUTHORIZED: HttpStatus = { code: 401, phrase: "Unauthorized" };
    public static PAYMENT_REQUIRED: HttpStatus = { code: 402, phrase: "Payment Required" };
    public static FORBIDDEN: HttpStatus = { code: 403, phrase: "Forbidden" };
    public static NOT_FOUND: HttpStatus = { code: 404, phrase: "Not Found" };
    public static METHOD_NOT_ALLOWED: HttpStatus = { code: 405, phrase: "Method Not Allowed" };
    public static NOT_ACCEPTABLE: HttpStatus = { code: 406, phrase: "Not Acceptable" };
    public static PROXY_AUTHENTICATION_REQUIRED: HttpStatus = { code: 407, phrase: "Proxy Authentication Required" };
    public static REQUEST_TIMEOUT: HttpStatus = { code: 408, phrase: "Request Timeout" };
    public static CONFLICT: HttpStatus = { code: 409, phrase: "Conflict" };
    public static GONE: HttpStatus = { code: 410, phrase: "Gone" };
    public static LENGTH_REQUIRED: HttpStatus = { code: 411, phrase: "Length Required" };
    public static PRECONDITION_FAILED: HttpStatus = { code: 412, phrase: "Precondition Failed" };
    public static REQUEST_TOO_LONG: HttpStatus = { code: 413, phrase: "Request Entity Too Large" };
    public static REQUEST_URI_TOO_LONG: HttpStatus = { code: 414, phrase: "Request-URI Too Long" };
    public static UNSUPPORTED_MEDIA_TYPE: HttpStatus = { code: 415, phrase: "Unsupported Media Type" };
    public static REQUESTED_RANGE_NOT_SATISFIABLE: HttpStatus = { code: 416, phrase: "Requested Range Not Satisfiable" };
    public static EXPECTATION_FAILED: HttpStatus = { code: 417, phrase: "Expectation Failed" };
    public static IM_A_TEAPOT: HttpStatus = { code: 418, phrase: "I'm a teapot" };
    public static INSUFFICIENT_SPACE_ON_RESOURCE: HttpStatus = { code: 419, phrase: "Insufficient Space on Resource" };
    public static METHOD_FAILURE: HttpStatus = { code: 420, phrase: "Method Failure" };
    public static MISDIRECTED_REQUEST: HttpStatus = { code: 421, phrase: "Misdirected Request" };
    public static UNPROCESSABLE_ENTITY: HttpStatus = { code: 422, phrase: "Unprocessable Entity" };
    public static LOCKED: HttpStatus = { code: 423, phrase: "Locked" };
    public static FAILED_DEPENDENCY: HttpStatus = { code: 424, phrase: "Failed Dependency" };
    public static PRECONDITION_REQUIRED: HttpStatus = { code: 428, phrase: "Precondition Required" };
    public static TOO_MANY_REQUESTS: HttpStatus = { code: 429, phrase: "Too Many Requests" };
    public static REQUEST_HEADER_FIELDS_TOO_LARGE: HttpStatus = { code: 431, phrase: "Request Header Fields Too Large" };
    public static UNAVAILABLE_FOR_LEGAL_REASONS: HttpStatus = { code: 451, phrase: "Unavailable For Legal Reasons" };
    public static INTERNAL_SERVER_ERROR: HttpStatus = { code: 500, phrase: "Internal Server Error" };
    public static NOT_IMPLEMENTED: HttpStatus = { code: 501, phrase: "Not Implemented" };
    public static BAD_GATEWAY: HttpStatus = { code: 502, phrase: "Bad Gateway" };
    public static SERVICE_UNAVAILABLE: HttpStatus = { code: 503, phrase: "Service Unavailable" };
    public static GATEWAY_TIMEOUT: HttpStatus = { code: 504, phrase: "Gateway Timeout" };
    public static HTTP_VERSION_NOT_SUPPORTED: HttpStatus = { code: 505, phrase: "HTTP Version Not Supported" };
    public static INSUFFICIENT_STORAGE: HttpStatus = { code: 507, phrase: "Insufficient Storage" };
    public static NETWORK_AUTHENTICATION_REQUIRED: HttpStatus = { code: 511, phrase: "Network Authentication Required" };
}